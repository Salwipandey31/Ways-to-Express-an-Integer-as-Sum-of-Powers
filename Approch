💡 Approach
Use Depth-First Search (DFS) to explore possible combinations of integers.

At each step, choose to either:

Include the current number (current^x) in the sum.

Skip the current number.

Memoize (remainingSum, currentNumber) to avoid recomputation (Top-down DP).

Stop exploring when:

The remaining sum is 0 → Valid combination.

The remaining sum is negative → Invalid path.

Return result modulo 
10
9
+
7
10 
9
 +7.

⏳ Complexity
Time: 
𝑂
(
𝑁
⋅
𝑁
𝑥
)
O(N⋅ 
x
  
N
​
 ) approximately, due to memoization.

Space: 
𝑂
(
𝑁
⋅
𝑁
𝑥
)
O(N⋅ 
x
  
N
​
 ) for memo table and recursion stack.

🚀 Example Recursion Tree (n=4, x=1)


dfs(4,1)
 ├── Take 1 → dfs(3,2)
 │     ├── Take 2 → dfs(1,3)
 │     │     ├── Take 3 → dfs(-2,4) ❌
 │     │     └── Skip 3 → dfs(1,4) ❌
 │     └── Skip 2 → dfs(3,3)
 │           ├── Take 3 → dfs(0,4) ✅ (Found)
 │           └── Skip 3 → dfs(3,4) ❌
 └── Skip 1 → dfs(4,2)
       ├── Take 2 → dfs(2,3)
       │     ├── Take 3 → dfs(-1,4) ❌
       │     └── Skip 3 → dfs(2,4) ❌
       └── Skip 2 → dfs(4,3)
             ├── Take 3 → dfs(1,4) ❌
             └── Skip 3 → dfs(4,4) ❌
✅ = valid combination, ❌ = invalid path
